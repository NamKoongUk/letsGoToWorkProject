<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Employee">
	<resultMap id="employeeResultSet" type="com.kh.lgtw.employee.model.vo.Employee">
		<id column="EMPNO" property="empNo"/>
		<result column="EMP_ID" property="empId"/>
		<result column="EMP_PWD" property="empPwd"/>
		<result column="EMP_NAME" property="empName"/>
		<result column="BIRTH" property="empBirth" />
		<result column="GENDER" property="gender"/>
		<result column="EMP_PHONE" property="empPhone"/>
		<result column="OFFICE_TEL" property="officeTel"/>
		<result column="ADDRESS" property="address"/>
		<result column="EMAIL" property="email"/>
		<result column="MANAGER_TYPE" property="managerType"/>
		<result column="STATUS" property="status"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="RETIREMENT_DATE" property="retirementDate"/>
		<result column="OTHER_INFO" property="otherInfo"/>
		<result column="PERSONAL_INFO_CHECK" property="personalInfoCheck"/>
		<result column="REF_EMPNO" property="refEmpNo"/>
		<result column="LSTART_DATE" property="lstartDate"/>
		<result column="LEND_DATE" property="lendDate"/>
		<result column="LEAVE_TERM" property="leaveTerm"/>
		<result column="LEAVE_REASON" property="leaveReason"/>
		<result column="RETIREMENT_REASON" property="retirementReason"/>
		<result column="LEAVE_TYPE" property="leaveType"/>
	</resultMap>
	
	<resultMap id="deptResult" type="com.kh.lgtw.employee.model.vo.DeptVo">
		<id column="DEPT_CODE" property="deptCode"/>
		<result column="DEPT_NAME" property="deptName"/>
		<result column="TOP_DEPT" property="topDept"/>
		<result column="MANAGER_EMPNO" property="managerEmpNo"/>
		<result column="LEVEL" property="level"/>
	</resultMap>
	
	
	<resultMap id="empListResult" type="com.kh.lgtw.employee.model.vo.EmployeeResult">
		<id column="EMPNO" property="empNo"/>
		<result column="EMP_ID" property="empId"/>
		<result column="EMP_PWD" property="empPwd"/>
		<result column="EMP_NAME" property="empName"/>
		<result column="BIRTH" property="empBirth" />
		<result column="GENDER" property="gender"/>
		<result column="EMP_PHONE" property="empPhone"/>
		<result column="OFFICE_TEL" property="officeTel"/>
		<result column="ADDRESS" property="address"/>
		<result column="EMAIL" property="email"/>
		<result column="MANAGER_TYPE" property="managerType"/>
		<result column="STATUS" property="status"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="RETIREMENT_DATE" property="retirementDate"/>
		<result column="OTHER_INFO" property="otherInfo"/>
		<result column="PERSONAL_INFO_CHECK" property="personalInfoCheck"/>
		<result column="REF_EMPNO" property="refEmpNo"/>
		<result column="LSTART_DATE" property="lstartDate"/>
		<result column="LEND_DATE" property="lendDate"/>
		<result column="LEAVE_TERM" property="leaveTerm"/>
		<result column="LEAVE_REASON" property="leaveReason"/>
		<result column="RETIREMENT_REASON" property="retirementReason"/>
		<result column="LEAVE_TYPE" property="leaveType"/>
		<result column="DEPT_CODE" property="deptCode"/>
		<result column="DEPT_NAME" property="deptName"/>
		<result column="TOP_DEPT" property="topDept"/>
		<result column="JOB_CODE" property="jobCode"/>
		<result column="JOB_NAME" property="jobName"/>
		<result column="JOB_LEVEL" property="jobLevel"/>
	</resultMap>
	
	<resultMap id="jobList" type="com.kh.lgtw.employee.model.vo.JobVo">
		<id column="JOB_CODE" property="jobCode"/>
		<result column="JOB_NAME" property="jobName"/>
		<result column="JOB_LEVEL" property="jobLevel"/>
	</resultMap>
	
	<resultMap id="deptHistory" type="com.kh.lgtw.employee.model.vo.DeptHistory">
		<id column="DH_NO" property="dhNo"/>
		<result column="EMPNO" property="empNo"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
		<result column="DEPT_CODE" property="deptCode"/>
	</resultMap>
	
	<resultMap id="jobHistory" type="com.kh.lgtw.employee.model.vo.PromotionHistory">
		<id column="PH_NO" property="phNo"/>
		<result column="EMPNO" property="empNo"/>
		<result column="MODIFY_DATE" property="modify_Date"/>
		<result column="JOB_CODE" property="jobCode"/>
	</resultMap>
	
	<resultMap id="attachment" type="com.kh.lgtw.common.model.vo.Attachment">
		<id column="ATTACHMENT_NO" property="attNo"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="FILEPATH" property="filePath"/>
		<result column="FILE_TYPE" property="fileType"/>
		<result column="RH_REQUEST_NO" property="requestNo"/>
		<result column="EMPNO" property="empNo"/>
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="deptResultSet">
		<id property="deptCode" column="DEPT_CODE"/>
		<result property="deptName" column="DEPT_NAME"/>
		<result property="topDept" column="TOP_DEPT"/>
		<result property="managerEmpno" column="MANAGER_EMPNO"/>
		<result property="stat" column="STAT"/>
	</resultMap>
	
	<!-- 욱 휴가 -->
	<!-- <resultMap type="java.util.HashMap" id="holidayResultSet">
		<id column="EMPNO" property="empNo"/>
		<result column="EMP_NAME" property="empName"/>
		<result column="DEPT_NAME" property="deptName"/>
		<result column="JOB_NAME" property="jobName"/>
		<result column="MANAGER_EMPNO" property="managerNo"/>
		<result column="MANAGER_NAME" property="managerName"/>
		<result column="HIH_NO" property="hihNo"/>
		<result column="HIH_TOTAL_DATE" property="hihTotalDate"/>
		<result column="HIH_APPLY_DATE" property="hihApplyDate"/>
	</resultMap> -->
	

	<!-- 로그인시 사원 객체 조회 -->
	<select id="loginCheck" resultMap="employeeResultSet" parameterType="Employee">
		SELECT *
		FROM EMPLOYEE
		WHERE EMP_ID = #{empId}
	</select>
	
	<!-- id, pw 확인 -->
	<select id="selectEncPassword" resultType="java.lang.String" parameterType="Employee">
		SELECT EMP_PWD
		FROM EMPLOYEE
		WHERE EMP_ID = #{empId}
	</select>
	
	<insert id="insertEmpOne" parameterType="Employee">
		INSERT INTO EMPLOYEE(EMPNO, EMP_ID, EMP_PWD, EMP_NAME, BIRTH, GENDER, 
							EMP_PHONE, OFFICE_TEL, ADDRESS, EMAIL, STATUS, ENROLL_DATE, OTHER_INFO, PERSONAL_INFO_CHECK)
		VALUES(SEQ_EMPNO.NEXTVAL, #{empId}, #{empPwd}, #{empName}, #{empBirth}, #{gender}, #{empPhone}, #{officeTel}, 
									#{address}, #{email}, DEFAULT, DEFAULT, #{otherInfo}, #{personalInfoCheck})
	</insert>
	
	<!-- 사원명으로 이메일 조회 -->
	<select id="selectEmpEmailForName" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT EMAIL
		FROM EMPLOYEE
		WHERE EMP_NAME LIKE '%' || #{ sName } || '%'
		AND STATUS = 'Y'
	</select>

	<select id="selectDeptList" resultMap="deptResult">
		SELECT DEPT_CODE, DEPT_NAME, TOP_DEPT, MANAGER_EMPNO
		FROM DEPT
	</select>
	
	<insert id="insertEmpQuick" parameterType="Employee">
		INSERT INTO EMPLOYEE(EMPNO, EMP_ID, EMP_PWD, EMP_NAME, EMP_PHONE, OFFICE_TEL, STATUS, ENROLL_DATE)
		VALUES(SEQ_EMPNO.NEXTVAL, #{empId}, #{empPwd}, #{empName}, #{empPhone}, #{officeTel},DEFAULT,DEFAULT)
	</insert>
	
	<insert id="insertDeptHistory" parameterType="DeptVo">
		INSERT INTO DEPT_HISTORY(DH_NO, EMPNO, MODIFY_DATE,DEPT_CODE)
		VALUES(SEQ_DH_NO.NEXTVAL,SEQ_EMPNO.CURRVAL,SYSDATE,#{deptCode})
	
	</insert>
	
	<select id="selectEmpListAdmin" resultMap="empListResult">
		select E.EMPNO, E.EMP_ID, E.EMP_NAME, D.DEPT_NAME, J.JOB_NAME, E.OFFICE_TEL, E.EMP_PHONE, E.STATUS
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.STATUS='Y' AND E.EMP_ID != 'admin'
        ORDER BY EMPNO DESC
		
	</select>
	
	<select id="selectJobAdmin" resultMap="jobList">
		SELECT JOB_CODE, JOB_NAME, JOB_LEVEL
		FROM JOB
	</select>
	
	<insert id="insertJobHistory" parameterType="JobVo">
		INSERT INTO PROMOTION_HISTORY(PH_NO, EMPNO, MODIFY_DATE,JOB_CODE)
		VALUES(SEQ_PH_NO.NEXTVAL,SEQ_EMPNO.CURRVAL,SYSDATE,#{jobCode})
	</insert>
	
	<insert id="insertEmpProfile" parameterType="Attachment">
		INSERT INTO ATTACHMENT (ATTACHMENT_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH, FILE_TYPE, EMPNO)
		VALUES(SEQ_ATTACHMENT_NO.NEXTVAL, #{originName},#{changeName},#{filePath},'ProfileImage',SEQ_EMPNO.CURRVAL)
	</insert>
	
	<select id="selectEmpListCount" resultType="_int">
		SELECT COUNT(*)
		FROM EMPLOYEE
		WHERE STATUS='Y'
		AND EMP_ID != 'admin'
	</select>
	
	<update id="deleteEmpList" parameterType="_int">
		UPDATE EMPLOYEE SET STATUS = 'N' WHERE EMPNO=#{empNo}
	</update>
	
	<select id="dbEmpList" resultMap="empListResult">
		SELECT E.EMPNO, E.EMP_ID, E.EMP_NAME, D.DEPT_NAME, J.JOB_NAME, E.OFFICE_TEL, E.EMP_PHONE, E.STATUS
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.STATUS !='N' AND E.EMP_ID != 'admin'
	</select>
	
	<update id="updateEmpExcel" parameterType="EmployeeResult">
		UPDATE EMPLOYEE SET EMP_NAME = #{empName}, OFFICE_TEL=#{officeTel}, EMP_PHONE=#{empPhone}, STATUS=#{status} WHERE EMPNO=#{empNo}
	</update>
	
	<update id="updateExcelDept" parameterType="EmployeeResult">
		UPDATE DEPT_HISTORY SET DEPT_CODE = (SELECT DEPT_CODE FROM DEPT WHERE DEPT_NAME=#{deptName}) WHERE EMPNO=#{empNo}
	</update>
	
	<update id="updateExcelJob" parameterType="EmployeeResult">
		UPDATE PROMOTION_HISTORY SET JOB_CODE = (SELECT JOB_CODE FROM JOB WHERE JOB_NAME=#{jobName}) WHERE EMPNO=#{empNo}
	</update>
	
	<select id="selectEmpJob" parameterType="Employee" resultMap="jobHistory">
		SELECT * FROM PROMOTION_HISTORY WHERE EMPNO=#{empNo}
	</select>
	
	<select id="selectEmpDept" parameterType="Employee" resultMap="deptHistory">
		SELECT * FROM DEPT_HISTORY WHERE EMPNO=#{empNo}
	</select>
	
	<select id="selectProfile" parameterType="Employee" resultMap="attachment">
		SELECT ATTACHMENT_NO, ORIGIN_NAME, CHANGE_NAME, FILEPATH
		FROM ATTACHMENT
		WHERE EMPNO=#{empNo}
	</select>
	
	<select id="selectUpCheckPwd" resultType="java.lang.String" parameterType="EmployeeResult">
		SELECT EMP_PWD
		FROM EMPLOYEE
		WHERE EMP_ID = #{empId}
	</select>
	
	<update id="updateEmpOne" parameterType="EmployeeResult">
		UPDATE EMPLOYEE SET 
		<if test="empPwd != null">
			EMP_PWD = #{empPwd},		
		</if>
		OFFICE_TEL=#{officeTel}, EMP_PHONE=#{empPhone},EMAIL=#{email}, ADDRESS=#{address}, OTHER_INFO=#{otherInfo}, STATUS=#{status} WHERE EMPNO=#{empNo}
	</update>
	<update id="updateEmpOneDept" parameterType="EmployeeResult">
		UPDATE DEPT_HISTORY SET DEPT_CODE = #{deptCode} WHERE EMPNO=#{empNo}
	</update>
	<update id="updateEmpOneJob" parameterType="EmployeeResult">
		UPDATE PROMOTION_HISTORY SET JOB_CODE = #{jobCode} WHERE EMPNO=#{empNo}
	</update>
	
	<update id="updateEmpAttach" parameterType="Attachment">
		UPDATE ATTACHMENT SET ORIGIN_NAME = #{originName}, CHANGE_NAME=#{changeName} WHERE EMPNO=#{empNo}
	</update>
	
	<select id="orgDept" resultMap="deptResult">
		SELECT DEPT_CODE, LEVEL lv, DEPT_NAME, TOP_DEPT
		FROM DEPT
		START WITH TOP_DEPT IS NULL
		CONNECT BY PRIOR DEPT_CODE=TOP_DEPT
		ORDER SIBLINGS BY DEPT_CODE
	</select>
	
	<select id="attachList" resultMap="attachment">
		SELECT ATTACHMENT_NO, ORIGIN_NAME, CHANGE_NAME, EMPNO
		FROM ATTACHMENT
		WHERE FILE_TYPE='ProfileImage'
	</select>
	
	<select id="getSearchEmpCount" resultType="_int" parameterType="EmployeeResult">
		SELECT COUNT(*)
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.EMP_ID != 'admin'
		AND E.STATUS = 'Y'
		<choose>
			<when test="deptName != 'all'">
				AND D.DEPT_NAME=#{deptName}
			</when>
			<when test="jobName != 'all'">
				AND J.JOB_NAME=#{jobName}
			</when>
			<when test="empName != null">
				AND E.EMP_NAME=#{empName}
			</when>
		</choose>
	</select>
	
	<select id="searchEmpUser" resultMap="empListResult" parameterType="EmployeeResult">
		SELECT E.EMPNO, E.EMP_ID, E.EMP_NAME, E.BIRTH, E.GENDER, E.EMP_PHONE, E.OFFICE_TEL, E.ADDRESS, E.EMAIL, E.OTHER_INFO, E.PERSONAL_INFO_CHECK, J.JOB_CODE, J.JOB_NAME, D.DEPT_CODE, D.DEPT_NAME
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.STATUS='Y' AND E.EMP_ID != 'admin'
		<choose>
			<when test="deptName != 'all'">
				AND D.DEPT_NAME=#{deptName}
			</when>
			<when test="jobName != 'all'">
				AND J.JOB_NAME=#{jobName}
			</when>
			<when test="empName != null">
				AND E.EMP_NAME=#{empName}
			</when>
		</choose>
        ORDER BY EMPNO
	</select>
	
	<select id="allEmpList" resultMap="empListResult">
		SELECT E.EMPNO, E.EMP_ID, E.EMP_NAME, D.DEPT_NAME, J.JOB_NAME, E.OFFICE_TEL, E.EMP_PHONE, E.STATUS
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.STATUS ='Y' AND E.EMP_ID != 'admin'
	</select>
	
	<update id="insertPrsnlManager" parameterType="_int">
		UPDATE EMPLOYEE SET MANAGER_TYPE = '인사관리자' WHERE EMPNO = #{empNo}
	</update>
	
	<select id="selectPrsnlEmp" resultMap="empListResult">
		SELECT E.EMPNO, E.EMP_ID, E.EMP_NAME, D.DEPT_NAME, J.JOB_NAME, E.OFFICE_TEL, E.EMP_PHONE, E.STATUS
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.STATUS ='Y' AND E.EMP_ID != 'admin'
		AND E.MANAGER_TYPE = '인사관리자'
	</select>
	
	<update id="deletePrsnlManager" parameterType="_int">
		UPDATE EMPLOYEE SET MANAGER_TYPE = NULL WHERE EMPNO = #{empNo}
	</update>
	
	<select id="selectEmpList" resultMap="empListResult">
		select E.EMPNO, E.EMP_ID, E.EMP_NAME, D.DEPT_NAME, J.JOB_NAME, E.OFFICE_TEL, E.EMP_PHONE, E.STATUS
		FROM EMPLOYEE E
		LEFT JOIN promotion_history PH ON(E.EMPNO=PH.EMPNO)
		LEFT JOIN JOB J ON(ph.job_code=J.JOB_CODE)
		LEFT JOIN DEPT_HISTORY DH ON (E.EMPNO=DH.EMPNO)
		LEFT JOIN DEPT D ON (DH.DEPT_CODE=D.DEPT_CODE)
		WHERE E.STATUS='Y' AND E.EMP_ID != 'admin'
        ORDER BY J.JOB_CODE
	</select>
	
	<select id="checkEmpWork" resultType="_int" parameterType="_int">
		select count(*) from attendance where =#{empNo} 
	</select>
	
	<!-- 휴가추가 - 욱 -->
	<insert id="insertHolidayAdmin">
		INSERT INTO HI_HISTORY(
			SELECT 
			SEQ_HIH_NO.NEXTVAL,
       		'연차',
	        CASE 
	        	<![CDATA[    
		          WHEN TRUNC(SYSDATE + 1 - ENROLL_DATE) < 365  THEN 0
		          WHEN TRUNC(SYSDATE + 1 - ENROLL_DATE) > 365*5 THEN 20
		          WHEN TRUNC(SYSDATE + 1 - ENROLL_DATE) > 365*4 THEN 19
		          WHEN TRUNC(SYSDATE + 1 - ENROLL_DATE) > 365*3 THEN 18
		          WHEN TRUNC(SYSDATE + 1 - ENROLL_DATE) > 365*2 THEN 17
		          WHEN TRUNC(SYSDATE + 1 - ENROLL_DATE) > 365*1 THEN 16
		         
	         ELSE 0 END HOLIDATE,
	       	E.EMPNO,
	       	SYSDATE
		FROM EMPLOYEE E LEFT JOIN HI_HISTORY HH ON (E.EMPNO = HH.EMPNO)
		WHERE (TO_CHAR(HH.HIH_APPLY_DATE,'YYYY') <> TO_CHAR(TO_DATE(SYSDATE),'YYYY') OR HH.HIH_NO IS NULL)
		]]>
		AND E.STATUS = 'Y')
	</insert>
	
	<!-- <select id="showHolidayApply" parameterType="_int" resultType="">
		
	</select> -->
	
	
	
	
	
	
</mapper>
